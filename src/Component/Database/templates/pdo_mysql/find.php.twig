switch ($entityClass) {
{% for entity in entities %}
    case \{{ entity.entityClass }}::class:
        $uniqueId = '{{ entity.entityClass }}' . '#' . $id;
        if (array_key_exists($uniqueId, $this->managedEntities)) {
            $entity = instance_cast($this->managedEntities[$uniqueId]->getEntity(), \{{ entity.entityClass }}::class);
            if (!$entity->_isInitialized()) {
                $this->refresh($entity);
                $entity->_setInitialized();

                $this->managedEntities[$uniqueId]->setValues($entity->_getValues());
            }

            return $entity;
        }

        return $this->findOneBy($entityClass, ['{{ entity.idFieldName }}' => $id]);
{% endfor %}
}

throw new \Kaa\Component\Database\Exception\DatabaseException("Entity {$entityClass} does not exist in connection {{ connection }}");
